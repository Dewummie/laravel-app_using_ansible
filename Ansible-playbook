Ansible-playbook/group_vars/all

php_version: 8.0
vhost_name: lavarel_project
server_document_root: "/var/www/html"



# Variables for Role Certbot certs.
certbot_create_if_missing: false
certbot_create_method: standalone
certbot_admin_email: devops4solutions@gmail.com

certbot_create_standalone_stop_services:
  - apache2

apache_vhosts:
  - {servername: "dewummieolayiwola.tk", serveralias: "www.dewummieolayiwola.tk", documentroot: "/var/www/html/lavarel_project/public"}
Ansible-playbook/inventories/dev/hosts


Ansible-playbook/main.yml
- hosts: all
 become: true
  become_user: root
  gather_facts: false
  tasks:
    - include_role:
        name: php

- hosts: all
 become: true
 become_user: root
  gather_facts: false
  tasks:
    - include_role:
        name: cert
        Ansible-playbook/roles/cert/tasks/main.yaml
        ---
- name: Upgrade System
  apt: upgrade=dist update_cache=yes

#- name: Add certbot repository
#  apt_repository:
#   repo: 'ppa:certbot/certbot'

- name: Install Certbot's apache package
  apt:
   name: python3-certbot-apache
   state: present

- name: Check if certificate already exists.
  stat:
    path: /etc/letsencrypt/live/{{ item.servername }}/cert.pem
  register: letsencrypt_cert
  with_items: "{{ apache_vhosts }}"

- name: Stop services to allow certbot to generate a cert.
  service:
    name: "{{ item }}"
    state: stopped
  with_items:
          -  "{{ certbot_create_standalone_stop_services }}"

- name: Generate new certificate if one doesn't exist.
  shell: "certbot certonly --standalone --noninteractive --agree-tos --email {{ certbot_admin_email }} -d {{ item.item.servername }}"
  with_items: "{{ letsencrypt_cert.results }}"
  when: item.stat.exists == False

- name: Start services after cert has been generated.
  service:
    name: "{{ item }}"
    state: started
  with_items: "{{ certbot_create_standalone_stop_services }}"
  Ansible-playbook/roles/php/handlers/main.yml
   name: start apache2
  service:
    state: started
    name: apache2

- name: stop apache2
  service:
    state: stopped
    name: apache2

- name: restart apache2
  service:
  state: restarted
    name: apache2
    daemon_reload: yes
Ansible-playbook/roles/php/tasks/main.yml
- name: Upgrade System
  apt: upgrade=dist update_cache=yes

- name: Add php repository
  apt_repository:
   repo: 'ppa:ondrej/php'
   
    name: Install PHP
  apt: name=php{{php_version}} state=latest

- name: Install PHP MB
  apt: name=php{{php_version}}-mbstring state=latest

- name: Install PHP XML
  apt: name=php-xml state=latest

- name: Install unzip
  apt: name=unzip state=latest


- name: Download php-composer
  get_url:
    url: https://getcomposer.org/installer
    dest: /tmp/installer
    
     name: install composer
  shell: cat /tmp/installer | php -- --install-dir=/usr/local/bin
  args:
    creates: /usr/local/bin/composer

- name: rename composer.phar to composer
  shell: mv /usr/local/bin/composer.phar /usr/local/bin/composer
  args:
    creates: /usr/local/bin/composer

- name: make composer executable
  file: 
    path: /usr/local/bin/composer
    mode: a+x
    state: file

- name: install apache2 server
  apt:
     name: apache2
     state: present

- name: checkout latest code from github
  git: >
    repo=https://github.com/devops4solutions/lavaral_project.git
    dest=/opt/{{ vhost_name }}
    force=yes
    accept_hostkey=yes
    
     -name: copy lavarel project
  shell: sudo mv /opt/{{ vhost_name }} /var/www/html/

- name: Change permission
  shell: sudo chgrp -R www-data /var/www/html/{{ vhost_name }}/

- name: Change permission
  shell: sudo chmod -R 775 /var/www/html/{{ vhost_name }}/storage

- name: Remove default apache vhost config from sites-enabled
  file: name=/etc/apache2/sites-enabled/000-default.conf state=absent

- name: Create apache vhosts for  domain
  template: src=web.conf.j2 dest="/etc/apache2/sites-available/{{ vhost_name }}.conf" owner=www-data group=www-data mode=0644

- name: Update a2ensite
  command: a2ensite {{ vhost_name }}

- name: Enable the Apache rewrite module
  command:  a2enmod rewrite

  notify:
    - restart apache2
    Ansible-playbook/roles/php/templates/web.conf.j2
    server {
    listen 80 deferred;
    server_name {{ vhost_name}};
    return 301 https://{{ vhost_name}}$request_uri;
}

server {
      listen 443 deferred ssl;

      root /var/www/{{ vhost_name}}/current/public;
      server_name {{ vhost_name}};
      index index.php;

      access_log /var/log/{{vhost_name }}.log;
      error_log  /var/{{ vhost_name}}-error.log error;

      charset utf-8;

      include h5bp/basic.conf;

      ssl_certificate      /etc/letsencrypt/live/{{ vhost_name }}/fullchain.pem;
      ssl_trusted_certificate   /etc/letsencrypt/live/{{ vhost_name }}/fullchain.pem;
      ssl_certificate_key       /etc/letsencrypt/live/{{ vhost_name }}/privkey.pem;
      include h5bp/directive-only/ssl.conf;

      location / {
          try_files $uri $uri/ /index.php$is_args$args;
      }

      location ~ \.php$ {
          fastcgi_split_path_info ^(.+\.php)(/.+)$;
          fastcgi_pass 127.0.0.1:9000;
          fastcgi_index index.php;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          include fastcgi_params;
      }
